<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0082)http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module -->
<html lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>ElecFreaks - Wiki</title>

<meta name="generator" content="MediaWiki 1.16.5">
<link rel="shortcut icon" href="http://www.elecfreaks.com/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://www.elecfreaks.com/wiki/opensearch_desc.php" title="Wiki (en)">
<link rel="alternate" type="application/atom+xml" title="Wiki Atom feed" href="http://www.elecfreaks.com/wiki/index.php?title=Special:RecentChanges&feed=atom">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/skins/vector/main-ltr.css?270" media="screen">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/skins/common/shared.css?270" media="screen">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/skins/common/commonPrint.css?270" media="print">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/index.php?title=MediaWiki:Common.css&usemsgcache=yes&ctype=text%2Fcss&smaxage=18000&action=raw&maxage=18000">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/index.php?title=MediaWiki:Print.css&usemsgcache=yes&ctype=text%2Fcss&smaxage=18000&action=raw&maxage=18000" media="print">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/index.php?title=MediaWiki:Vector.css&usemsgcache=yes&ctype=text%2Fcss&smaxage=18000&action=raw&maxage=18000">
<link rel="stylesheet" href="http://www.elecfreaks.com/wiki/index.php?title=-&action=raw&maxage=18000&gen=css">
<script>
var skin="vector",
stylepath="/wiki/skins",
wgUrlProtocols="http\\:\\/\\/|https\\:\\/\\/|ftp\\:\\/\\/|irc\\:\\/\\/|gopher\\:\\/\\/|telnet\\:\\/\\/|nntp\\:\\/\\/|worldwind\\:\\/\\/|mailto\\:|news\\:|svn\\:\\/\\/",
wgArticlePath="/wiki/index.php?title=$1",
wgScriptPath="/wiki",
wgScriptExtension=".php",
wgScript="/wiki/index.php",
wgVariantArticlePath=false,
wgActionPaths={},
wgServer="http://www.elecfreaks.com",
wgCanonicalNamespace="",
wgCanonicalSpecialPageName=false,
wgNamespaceNumber=0,
wgPageName="4.3\"_Width_480*272_TFT_LCD_Module",
wgTitle="4.3\" Width 480*272 TFT LCD Module",
wgAction="view",
wgArticleId=570,
wgIsArticle=true,
wgUserName=null,
wgUserGroups=null,
wgUserLanguage="en",
wgContentLanguage="en",
wgBreakFrames=false,
wgCurRevisionId=2554,
wgVersion="1.16.5",
wgEnableAPI=true,
wgEnableWriteAPI=true,
wgSeparatorTransformTable=["", ""],
wgDigitTransformTable=["", ""],
wgMainPageTitle="Main Page",
wgFormattedNamespaces={"-2": "Media", "-1": "Special", "0": "", "1": "Talk", "2": "User", "3": "User talk", "4": "Wiki", "5": "Wiki talk", "6": "File", "7": "File talk", "8": "MediaWiki", "9": "MediaWiki talk", "10": "Template", "11": "Template talk", "12": "Help", "13": "Help talk", "14": "Category", "15": "Category talk"},
wgNamespaceIds={"media": -2, "special": -1, "": 0, "talk": 1, "user": 2, "user_talk": 3, "wiki": 4, "wiki_talk": 5, "file": 6, "file_talk": 7, "mediawiki": 8, "mediawiki_talk": 9, "template": 10, "template_talk": 11, "help": 12, "help_talk": 13, "category": 14, "category_talk": 15, "image": 6, "image_talk": 7},
wgSiteName="Wiki",
wgCategories=["TFT01-4.3", "LCD", "All Products"],
wgRestrictionEdit=[],
wgRestrictionMove=[];
</script><script src="./ElecFreaks - Wiki_files/wikibits.js"></script>
<script src="./ElecFreaks - Wiki_files/ajax.js"></script>
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/wiki/skins/vector/csshover.htc")}</style><![endif]-->
<script src="./ElecFreaks - Wiki_files/index.php"></script>

<style type="text/css">/*<![CDATA[*/
.source-php {line-height: normal;}
.source-php li, .source-php pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for php
 * CSS class: source-php, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.php.source-php .de1, .php.source-php .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;}
.php.source-php  {font-family:monospace;}
.php.source-php .imp {font-weight: bold; color: red;}
.php.source-php li, .php.source-php .li1 {font-weight: normal; vertical-align:top;}
.php.source-php .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.php.source-php .li2 {font-weight: bold; vertical-align:top;}
.php.source-php .kw1 {color: #b1b100;}
.php.source-php .kw2 {color: #000000; font-weight: bold;}
.php.source-php .kw3 {color: #990000;}
.php.source-php .kw4 {color: #009900; font-weight: bold;}
.php.source-php .co1 {color: #666666; font-style: italic;}
.php.source-php .co2 {color: #666666; font-style: italic;}
.php.source-php .co3 {color: #0000cc; font-style: italic;}
.php.source-php .co4 {color: #009933; font-style: italic;}
.php.source-php .coMULTI {color: #666666; font-style: italic;}
.php.source-php .es0 {color: #000099; font-weight: bold;}
.php.source-php .es1 {color: #000099; font-weight: bold;}
.php.source-php .es2 {color: #660099; font-weight: bold;}
.php.source-php .es3 {color: #660099; font-weight: bold;}
.php.source-php .es4 {color: #006699; font-weight: bold;}
.php.source-php .es5 {color: #006699; font-weight: bold; font-style: italic;}
.php.source-php .es6 {color: #009933; font-weight: bold;}
.php.source-php .es_h {color: #000099; font-weight: bold;}
.php.source-php .br0 {color: #009900;}
.php.source-php .sy0 {color: #339933;}
.php.source-php .sy1 {color: #000000; font-weight: bold;}
.php.source-php .st0 {color: #0000ff;}
.php.source-php .st_h {color: #0000ff;}
.php.source-php .nu0 {color: #cc66cc;}
.php.source-php .nu8 {color: #208080;}
.php.source-php .nu12 {color: #208080;}
.php.source-php .nu19 {color:#800080;}
.php.source-php .me1 {color: #004000;}
.php.source-php .me2 {color: #004000;}
.php.source-php .re0 {color: #000088;}
.php.source-php .ln-xtra, .php.source-php li.ln-xtra, .php.source-php div.ln-xtra {background-color: #ffc;}
.php.source-php span.xtra { display:block; }

/*]]>*/
</style>
<style type="text/css">/*<![CDATA[*/
@import "/wiki/index.php?title=MediaWiki:Geshi.css&usemsgcache=yes&action=raw&ctype=text/css&smaxage=18000";
/*]]>*/
</style></head>
<body class="mediawiki ltr ns-0 ns-subject page-4_3_Width_480_272_TFT_LCD_Module skin-vector">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<!-- content -->
		<div id="content">
			<a id="top"></a>
			<div id="mw-js-message" style="display:none;"></div>
						<!-- firstHeading -->
			<h1 id="firstHeading" class="firstHeading">4.3" Width 480*272 TFT LCD Module</h1>
			<!-- /firstHeading -->
			<!-- bodyContent -->
			<div id="bodyContent">
				<!-- tagline -->
				<h3 id="siteSub">From Wiki</h3>
				<!-- /tagline -->
				<!-- subtitle -->
				<div id="contentSub"></div>
				<!-- /subtitle -->
																<!-- jumpto -->
				<div id="jump-to-nav">
					Jump to: <a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#mw-head">navigation</a>,
					<a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#p-search">search</a>
				</div>
				<!-- /jumpto -->
								<!-- bodytext -->
				<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a id="togglelink" class="internal" href="javascript:toggleToc()">hide</a>]</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Feature"><span class="tocnumber">2</span> <span class="toctext">Feature</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Application_Ideas"><span class="tocnumber">3</span> <span class="toctext">Application Ideas</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Cautions"><span class="tocnumber">4</span> <span class="toctext">Cautions</span></a></li>
<li class="toclevel-1 tocsection-5"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#TFT01_Family"><span class="tocnumber">5</span> <span class="toctext">TFT01 Family</span></a></li>
<li class="toclevel-1 tocsection-6"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Pin_definition_and_Rating"><span class="tocnumber">6</span> <span class="toctext">Pin definition and Rating</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Mechanic_Dimensions"><span class="tocnumber">7</span> <span class="toctext">Mechanic Dimensions</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Usage"><span class="tocnumber">8</span> <span class="toctext">Usage</span></a>
<ul>
<li class="toclevel-2 tocsection-9"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Hardware_Installation"><span class="tocnumber">8.1</span> <span class="toctext">Hardware Installation</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Programming"><span class="tocnumber">8.2</span> <span class="toctext">Programming</span></a>
<ul>
<li class="toclevel-3 tocsection-11"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Pant_and_Touch_Code"><span class="tocnumber">8.2.1</span> <span class="toctext">Pant and Touch Code</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-12"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Example"><span class="tocnumber">8.3</span> <span class="toctext">Example</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Bill_of_Materials_.28BOM.29_.2Fparts_list"><span class="tocnumber">9</span> <span class="toctext">Bill of Materials (BOM) /parts list</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#FAQ"><span class="tocnumber">10</span> <span class="toctext">FAQ</span></a></li>
<li class="toclevel-1 tocsection-15"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Support"><span class="tocnumber">11</span> <span class="toctext">Support</span></a></li>
<li class="toclevel-1 tocsection-16"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Version_Tracker"><span class="tocnumber">12</span> <span class="toctext">Version Tracker</span></a></li>
<li class="toclevel-1 tocsection-17"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Bug_Tracker"><span class="tocnumber">13</span> <span class="toctext">Bug Tracker</span></a></li>
<li class="toclevel-1 tocsection-18"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Additional_Idea"><span class="tocnumber">14</span> <span class="toctext">Additional Idea</span></a></li>
<li class="toclevel-1 tocsection-19"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Resources"><span class="tocnumber">15</span> <span class="toctext">Resources</span></a></li>
<li class="toclevel-1 tocsection-20"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#How_to_buy"><span class="tocnumber">16</span> <span class="toctext">How to buy</span></a></li>
<li class="toclevel-1 tocsection-21"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#See_Also"><span class="tocnumber">17</span> <span class="toctext">See Also</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#Licensing"><span class="tocnumber">18</span> <span class="toctext">Licensing</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#External_Links"><span class="tocnumber">19</span> <span class="toctext">External Links</span></a></li>
</ul>
</td></tr></tbody></table><script>if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<h2> <span class="mw-headline" id="Introduction"> Introduction  </span></h2>
<p><b>TFT01_4.3"</b> is a TFT LCD WideScreen Module , 40pins interface , not just a LCD break but include the <b>Touch</b> , <b>SD card</b> and <b>Flash</b> design. So it’s a powerful extension module for your project.<br>
</p><p>The Screen include a controller <a href="http://elecfreaks.com/store/download/datasheet/lcd/TFT/4.3inch.zip" class="external text" rel="nofollow">SSD1963</a>, it’s a support <b>16bit</b> data interface , easy to drive by many MCU like STM32 ,AVR and 8051 etc.<br>
</p>
<ul><li>TFT01 is designed with a <b>touch controller</b> in it . The touch IC is <a href="http://elecfreaks.com/store/download/datasheet/lcd/TFT/4.3inch.zip" class="external text" rel="nofollow">XPT2046</a> , and touch interface is included in the 40 pins breakout. We will offer two version of the module, one is with touch screen and touch controller , another is without the touch function, it will just use as a LCD screen for display- so it will be inexpensive than former.<br>
</li></ul>
<ul><li>Another useful extension in the TFT01 is the <b>SD Card socket</b> . It use the <b>SPI</b> mode to operate the SD  card, the SPI interface include in the 40pins breakout.<br>
</li></ul>
<ul><li>There is a reserve extension design in the TFT01 , that’s the <b>external flash</b> . It’s leave the pad and the pins out for the <b>SST25VF016B</b> Flash. So when you need , you can easily add a external flash for your project .<br>
</li></ul>
<p>The TFT01 layout a 40 pins interface for your project , the interface include <b>LCD bus</b>, <b>SD card bus</b>, <b>Touch screen bus</b> and <b>the Flash bus.</b><br>
</p><p><b>Model:</b><a href="http://www.elecfreaks.com/store/43-tft-lcd-screen-module-tft0143-p-419.html" class="external text" rel="nofollow">TFT01-4.3</a><br>
</p><p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT4.3.jpg" class="image"><img alt="NewTFT4.3.jpg" src="./ElecFreaks - Wiki_files/600px-NewTFT4.3.jpg" width="600" height="434"></a>
</p>
<h2> <span class="mw-headline" id="Feature"> Feature </span></h2>
<ul><li>TFT Transmissive Normal White 
</li><li>Extensive bus interface
</li><li>Single chip solution for a liquid crystal TFT LCD display 
</li><li>480RGBx272-dot resolution capable with real 480,272 display color 
</li><li>Support MVA (Multi-domain Vertical Alignment) wide view display 
</li><li>Internal oscillator and hardware reset
</li><li>Partial drive function, enabling partially driving an LCD panel at positions specified by user 
</li><li>Power saving functions 
<ul><li>16-color mode 
</li><li>standby mode 
</li><li>sleep mode 
</li></ul>
</li><li>Display mode
<ul><li>Full color mode: 16.7M-color 
</li><li>Separate RGB gamma
</li><li>Reduced color mode: 16-colors (3-bits MSB bits mode)  
</li></ul>
</li><li>Low -power consumption architecture 
</li><li>Size:120cm * 74cm
</li></ul>
<h2> <span class="mw-headline" id="Application_Ideas"> Application Ideas  </span></h2>
<ul><li>Digital Photo Frame （DPF）
</li><li>Video terminals
</li><li>Instrumentation
</li><li>GPS
</li><li>Game consoles
</li><li>Video phones and Portable VCD, DVD
</li></ul>
<h2> <span class="mw-headline" id="Cautions"> Cautions  </span></h2>
<p><font color="red"> <strong>
</strong></font></p><font color="red"><strong>
<ul><li>The I/O of the Panel is 3.3v voltage , so you had better not to directly connect it to the 5v voltage I/O .We suggest using the 30K and 20K resistor to reduce voltage. 
</li></ul>
</strong></font><p><font color="red"><strong></strong></font>
</p>
<h2> <span class="mw-headline" id="TFT01_Family"> TFT01 Family  </span></h2>
<p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT2.4-04-LGR.jpg" class="image"><img alt="NewTFT2.4-04-LGR.jpg" src="./ElecFreaks - Wiki_files/700px-NewTFT2.4-04-LGR.jpg" width="700" height="444"></a>
</p>
<h2> <span class="mw-headline" id="Pin_definition_and_Rating"> Pin definition and Rating  </span></h2>
<p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:TFT01-2.4-04.jpg" class="image"><img alt="TFT01-2.4-04.jpg" src="./ElecFreaks - Wiki_files/500px-TFT01-2.4-04.jpg" width="500" height="333"></a>
</p><p>The pins named with <b>“D_”</b> is the touch bus , the pins named with <b>“SD_”</b> is SD bus, the pins named with <b>“F_”</b>  is Flash bus.
</p><p>TFT01 is work at 3.3v DC, if you need to connect the module with the 5v voltage I/O , you need to add the 30k and 20k resistors to reduce voltage.
</p><p><br>
</p><p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:TFT4.3.jpg" class="image"><img alt="TFT4.3.jpg" src="./ElecFreaks - Wiki_files/500px-TFT4.3.jpg" width="500" height="481"></a>
</p>
<h2> <span class="mw-headline" id="Mechanic_Dimensions"> Mechanic Dimensions  </span></h2>
<p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT4.3-06-LGR.jpg" class="image"><img alt="NewTFT4.3-06-LGR.jpg" src="./ElecFreaks - Wiki_files/700px-NewTFT4.3-06-LGR.jpg" width="700" height="405"></a>
</p>
<h2> <span class="mw-headline" id="Usage"> Usage  </span></h2>
<h3> <span class="mw-headline" id="Hardware_Installation"> Hardware Installation  </span></h3>
<h3> <span class="mw-headline" id="Programming"> Programming  </span></h3>
<p>Includes important code snippet. 
Download the below code. You could used <a href="http://www.elecfreaks.com/store/lcd-tft01-shield-v10-p-213.html" class="external text" rel="nofollow">TFT01 Shield v1.2</a> and <a href="http://www.elecfreaks.com/store/lcd-tft01-mega-shield-v10-p-214.html" class="external text" rel="nofollow">TFT-01 Mega Shield v1.2(Recommand)</a>, 
which for Mega1280 or Mega2560 and there are enough IO for Touch and SD card function . <br>
</p><p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT4.3-01-LGR.jpg" class="image"><img alt="NewTFT4.3-01-LGR.jpg" src="./ElecFreaks - Wiki_files/450px-NewTFT4.3-01-LGR.jpg" width="450" height="326"></a>
</p><p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT4.3-02-LGR.jpg" class="image"><img alt="NewTFT4.3-02-LGR.jpg" src="./ElecFreaks - Wiki_files/450px-NewTFT4.3-02-LGR.jpg" width="450" height="326"></a>
</p><p><a href="http://www.elecfreaks.com/wiki/index.php?title=File:NewTFT.jpg" class="image"><img alt="NewTFT.jpg" src="./ElecFreaks - Wiki_files/450px-NewTFT.jpg" width="450" height="305"></a>
</p><p><br>
<a href="http://www.elecfreaks.com/wiki/index.php?title=File:RGB.jpg.png" class="image"><img alt="RGB.jpg.png" src="./ElecFreaks - Wiki_files/700px-RGB.jpg.png" width="700" height="524"></a>
</p><p>Demo code like&nbsp;: 
</p>
<h4> <span class="mw-headline" id="Pant_and_Touch_Code"> Pant and Touch Code </span></h4>
<div style="width:1050px;border:1px dashed #808080;">
<div dir="ltr" class="mw-geshi" style="text-align: left;"><div class="php source-php"><pre class="de1"><span class="coMULTI">/***************************************************************************************************************************************************************
This example code is 16bit mode for TFT4.3 / TFT5.0 demo.
&nbsp;
The demo used TFT01 Mega Shield and connect the pins to Arduino first&nbsp;:
DB0-DB16 to pin 22-29, 30-37
&nbsp;
All the data pins of Arduino is used ….So , we just can connect the RD to 3.3V ….We don’t used it because we don’t need to read back the data from the screen.
Connect the power pins&nbsp;: LCD-A to 3.3V , VCC to 5V , GND to GND
&nbsp;
Note that if you haven't TFT01 Mega Shilld,the LCM is use the 3.3V voltage level , so if you want to connect the 5V Arduino pins to it , 
you need add a resister about 20K to reduce voltage. We use the 3.3V Arduino Pro which work in 8M , 
so we connect the pins directly — this is why we used 16 bit mode, 8 bit mode is too slow to refresh the screen.
&nbsp;
Create by Robi.Wang  On 9-June-2012 
Version 2.2  www.elecfreaks.com
***************************************************************************************************************************************************************/</span>
<span class="coMULTI">/* Display IO */</span> 
<span class="co2">#define LCD_RS   38         
</span><span class="co2">#define LCD_WR   39     
</span><span class="co2">#define LCD_CS   40       
</span><span class="co2">#define LCD_REST 41
</span>
<span class="coMULTI">/* Touch IO  */</span>
<span class="co2">#define DCLK     6
</span><span class="co2">#define CS       5  
</span><span class="co2">#define DIN      4 
</span><span class="co2">#define DOUT     3
</span><span class="co2">#define IRQ      2 
</span>
unsigned int  HDP<span class="sy0">=</span><span class="nu0">479</span><span class="sy0">;</span>
unsigned int  HT<span class="sy0">=</span><span class="nu0">531</span><span class="sy0">;</span>
unsigned int  HPS<span class="sy0">=</span><span class="nu0">43</span><span class="sy0">;</span>
unsigned int  LPS<span class="sy0">=</span><span class="nu0">8</span><span class="sy0">;</span>
unsigned char HPW<span class="sy0">=</span><span class="nu0">10</span><span class="sy0">;</span>
&nbsp;
unsigned int  VDP<span class="sy0">=</span><span class="nu0">271</span><span class="sy0">;</span>
unsigned int  VT<span class="sy0">=</span><span class="nu0">288</span><span class="sy0">;</span>
unsigned int  VPS<span class="sy0">=</span><span class="nu0">12</span><span class="sy0">;</span>
unsigned int  FPS<span class="sy0">=</span><span class="nu0">4</span><span class="sy0">;</span>
unsigned char VPW<span class="sy0">=</span><span class="nu0">10</span><span class="sy0">;</span>
&nbsp;
struct pix_
<span class="br0">{</span>
	unsigned int x<span class="sy0">;</span>
	unsigned int y<span class="sy0">;</span>
<span class="br0">}</span><span class="sy0">;</span>
&nbsp;
struct pix_ Tp_pix<span class="sy0">;</span>	
&nbsp;
void spistar<span class="br0">(</span><span class="br0">)</span>           <span class="co1">//SPI Start</span>
<span class="br0">{</span>
  digitalWrite<span class="br0">(</span>CS<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DIN<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
&nbsp;
<span class="br0">}</span>
<span class="co1">//**********************************************************</span>
void WriteCharTo7843<span class="br0">(</span>unsigned char num<span class="br0">)</span>          <span class="co1">//SPI Write Data</span>
<span class="br0">{</span>
  unsigned char <span class="kw3">count</span><span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>
  unsigned char temp<span class="sy0">;</span>
  unsigned nop<span class="sy0">;</span>
  temp<span class="sy0">=</span>num<span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">(</span><span class="kw3">count</span><span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>count<span class="sy0">&lt;</span><span class="nu0">8</span><span class="sy0">;</span><span class="kw3">count</span><span class="sy0">++</span><span class="br0">)</span>
  <span class="br0">{</span>
    <span class="kw1">if</span><span class="br0">(</span>temp<span class="sy0">&amp;</span><span class="nu12">0x80</span><span class="br0">)</span>
      digitalWrite<span class="br0">(</span>DIN<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
    <span class="kw1">else</span>
      digitalWrite<span class="br0">(</span>DIN<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
&nbsp;
    temp<span class="sy0">=</span>temp<span class="sy0">&lt;&lt;</span><span class="nu0">1</span><span class="sy0">;</span> 
&nbsp;
    digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>                
    nop<span class="sy0">++;</span>
    nop<span class="sy0">++;</span>
    digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
    nop<span class="sy0">++;</span>
    nop<span class="sy0">++;</span>
  <span class="br0">}</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">//**********************************************************</span>
unsigned int ReadFromCharFrom7843<span class="br0">(</span><span class="br0">)</span>             <span class="co1">//SPI Read Data</span>
<span class="br0">{</span> 
  unsigned nop<span class="sy0">;</span>
  unsigned char <span class="kw3">count</span><span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>
  unsigned int Num<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">(</span><span class="kw3">count</span><span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>count<span class="sy0">&lt;</span><span class="nu0">12</span><span class="sy0">;</span><span class="kw3">count</span><span class="sy0">++</span><span class="br0">)</span>
  <span class="br0">{</span>
    Num<span class="sy0">&lt;&lt;=</span><span class="nu0">1</span><span class="sy0">;</span>
    digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span><span class="co1">//DCLK=1; _nop_();_nop_();_nop_();                </span>
    nop<span class="sy0">++;</span>
    digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span><span class="co1">//DCLK=0; _nop_();_nop_();_nop_();</span>
    nop<span class="sy0">++;</span>
    <span class="kw1">if</span><span class="br0">(</span>digitalRead<span class="br0">(</span>DOUT<span class="br0">)</span><span class="br0">)</span> Num<span class="sy0">++;</span>
  <span class="br0">}</span>
  <span class="kw1">return</span><span class="br0">(</span>Num<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
<span class="co1">//void AD7843(void) </span>
struct pix_ AD7843<span class="br0">(</span><span class="br0">)</span>  
<span class="br0">{</span>
  struct pix_ pix<span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>CS<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>                    
  WriteCharTo7843<span class="br0">(</span><span class="nu12">0x90</span><span class="br0">)</span><span class="sy0">;</span> 
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span> 
  pix<span class="sy0">.</span>y<span class="sy0">=</span>ReadFromCharFrom7843<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
  WriteCharTo7843<span class="br0">(</span><span class="nu12">0xD0</span><span class="br0">)</span><span class="sy0">;</span>   
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>DCLK<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
  pix<span class="sy0">.</span>x<span class="sy0">=</span>ReadFromCharFrom7843<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>CS<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  <span class="kw1">return</span> pix<span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
void Lcd_Writ_Bus<span class="br0">(</span>char VH<span class="sy0">,</span>char VL<span class="br0">)</span>
<span class="br0">{</span>
  PORTA <span class="sy0">=</span> VH<span class="sy0">;</span>
  PORTC <span class="sy0">=</span> VL<span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>LCD_WR<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
  digitalWrite<span class="br0">(</span>LCD_WR<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
void Lcd_Write_Com<span class="br0">(</span>char VH<span class="sy0">,</span>char VL<span class="br0">)</span>  
<span class="br0">{</span>   
  digitalWrite<span class="br0">(</span>LCD_RS<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
  Lcd_Writ_Bus<span class="br0">(</span>VH<span class="sy0">,</span>VL<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
void Lcd_Write_Data<span class="br0">(</span>char VH<span class="sy0">,</span>char VL<span class="br0">)</span>
<span class="br0">{</span>
  digitalWrite<span class="br0">(</span>LCD_RS<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
  Lcd_Writ_Bus<span class="br0">(</span>VH<span class="sy0">,</span>VL<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
void LCD_WR_Data<span class="br0">(</span>int da<span class="br0">)</span>
<span class="br0">{</span>
    digitalWrite<span class="br0">(</span>LCD_RS<span class="sy0">,</span> <span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
    Lcd_Writ_Bus<span class="br0">(</span>da<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="sy0">,</span>da<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>	
&nbsp;
void LCD_WR_REG<span class="br0">(</span>int da<span class="br0">)</span>	 
<span class="br0">{</span>	
    digitalWrite<span class="br0">(</span>LCD_RS<span class="sy0">,</span><span class="nu0">0</span><span class="br0">)</span><span class="sy0">;</span>
    Lcd_Writ_Bus<span class="br0">(</span>da<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="sy0">,</span>da<span class="br0">)</span><span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
void Address_set<span class="br0">(</span>unsigned int x1<span class="sy0">,</span>unsigned int y1<span class="sy0">,</span>unsigned int x2<span class="sy0">,</span>unsigned int y2<span class="br0">)</span>
<span class="br0">{</span>
    LCD_WR_REG<span class="br0">(</span><span class="nu12">0x002A</span><span class="br0">)</span><span class="sy0">;</span>	
    LCD_WR_Data<span class="br0">(</span>x1<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">;</span>	    
    LCD_WR_Data<span class="br0">(</span>x1<span class="sy0">&amp;</span><span class="nu12">0x00ff</span><span class="br0">)</span><span class="sy0">;</span>
    LCD_WR_Data<span class="br0">(</span>x2<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">;</span>	    
    LCD_WR_Data<span class="br0">(</span>x2<span class="sy0">&amp;</span><span class="nu12">0x00ff</span><span class="br0">)</span><span class="sy0">;</span>
    LCD_WR_REG<span class="br0">(</span><span class="nu12">0x002b</span><span class="br0">)</span><span class="sy0">;</span>	
    LCD_WR_Data<span class="br0">(</span>y1<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">;</span>	    
    LCD_WR_Data<span class="br0">(</span>y1<span class="sy0">&amp;</span><span class="nu12">0x00ff</span><span class="br0">)</span><span class="sy0">;</span>
    LCD_WR_Data<span class="br0">(</span>y2<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">;</span>	    
    LCD_WR_Data<span class="br0">(</span>y2<span class="sy0">&amp;</span><span class="nu12">0x00ff</span><span class="br0">)</span><span class="sy0">;</span>
    LCD_WR_REG<span class="br0">(</span><span class="nu12">0x002c</span><span class="br0">)</span><span class="sy0">;</span>							 
<span class="br0">}</span>
&nbsp;
void Lcd_Init<span class="br0">(</span>void<span class="br0">)</span>
<span class="br0">{</span>
       digitalWrite<span class="br0">(</span>LCD_REST<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
       delay<span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span> 
       digitalWrite<span class="br0">(</span>LCD_REST<span class="sy0">,</span>LOW<span class="br0">)</span><span class="sy0">;</span>
       delay<span class="br0">(</span><span class="nu0">15</span><span class="br0">)</span><span class="sy0">;</span>
       digitalWrite<span class="br0">(</span>LCD_REST<span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
       delay<span class="br0">(</span><span class="nu0">15</span><span class="br0">)</span><span class="sy0">;</span>
       digitalWrite<span class="br0">(</span>LCD_CS <span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
       digitalWrite<span class="br0">(</span>LCD_WR <span class="sy0">,</span>HIGH<span class="br0">)</span><span class="sy0">;</span>
       digitalWrite<span class="br0">(</span>LCD_CS<span class="sy0">,</span> LOW<span class="br0">)</span><span class="sy0">;</span>
&nbsp;
        LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00E2</span><span class="br0">)</span><span class="sy0">;</span>	<span class="co1">//PLL multiplier, set PLL clock to 120M</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x002d</span><span class="br0">)</span><span class="sy0">;</span>	    <span class="co1">//N=0x36 for 6.5M, 0x23 for 10M crystal</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0002</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0004</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00E0</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">// PLL enable</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0001</span><span class="br0">)</span><span class="sy0">;</span>
	delay<span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00E0</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0003</span><span class="br0">)</span><span class="sy0">;</span>
	delay<span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x0001</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">// software reset</span>
	delay<span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00E6</span><span class="br0">)</span><span class="sy0">;</span>	<span class="co1">//PLL setting for PCLK, depends on resolution</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x00ff</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x00be</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00B0</span><span class="br0">)</span><span class="sy0">;</span>	<span class="co1">//LCD SPECIFICATION</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0020</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>HDP<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set HDP</span>
	LCD_WR_Data<span class="br0">(</span>HDP<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
        LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>VDP<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set VDP</span>
	LCD_WR_Data<span class="br0">(</span>VDP<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
        LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
	delay<span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00B4</span><span class="br0">)</span><span class="sy0">;</span>	<span class="co1">//HSYNC</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>HT<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set HT</span>
	LCD_WR_Data<span class="br0">(</span>HT<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>HPS<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set HPS</span>
	LCD_WR_Data<span class="br0">(</span>HPS<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span>HPW<span class="br0">)</span><span class="sy0">;</span>			   <span class="co1">//Set HPW</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>LPS<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//SetLPS</span>
	LCD_WR_Data<span class="br0">(</span>LPS<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00B6</span><span class="br0">)</span><span class="sy0">;</span>	<span class="co1">//VSYNC</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>VT<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>   <span class="co1">//Set VT</span>
	LCD_WR_Data<span class="br0">(</span>VT<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>VPS<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set VPS</span>
	LCD_WR_Data<span class="br0">(</span>VPS<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span>VPW<span class="br0">)</span><span class="sy0">;</span>			   <span class="co1">//Set VPW</span>
	LCD_WR_Data<span class="br0">(</span><span class="br0">(</span>FPS<span class="sy0">&gt;&gt;</span><span class="nu0">8</span><span class="br0">)</span><span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="co1">//Set FPS</span>
	LCD_WR_Data<span class="br0">(</span>FPS<span class="sy0">&amp;</span><span class="nu12">0X00FF</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x0036</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//rotation</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00F0</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//pixel data interface</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0003</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	delay<span class="br0">(</span><span class="nu0">5</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x0029</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//display on</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00BE</span><span class="br0">)</span><span class="sy0">;</span> <span class="co1">//set PWM for B/L</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0006</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x00f0</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0001</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x00f0</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00d0</span><span class="br0">)</span><span class="sy0">;</span> 
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x000d</span><span class="br0">)</span><span class="sy0">;</span>
&nbsp;
        <span class="co1">//----------LCD RESET---GPIO0-------------------//</span>
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00B8</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>    <span class="co1">//GPIO3=input, GPIO[2:0]=output</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0001</span><span class="br0">)</span><span class="sy0">;</span>    <span class="co1">//GPIO0 normal</span>
&nbsp;
	LCD_WR_REG<span class="br0">(</span><span class="nu12">0x00BA</span><span class="br0">)</span><span class="sy0">;</span>
	LCD_WR_Data<span class="br0">(</span><span class="nu12">0x0000</span><span class="br0">)</span><span class="sy0">;</span>  
<span class="br0">}</span>
&nbsp;
void Pant<span class="br0">(</span>char VH<span class="sy0">,</span>char VL<span class="br0">)</span>
<span class="br0">{</span>
  int i<span class="sy0">,</span>j<span class="sy0">;</span>
  Address_set<span class="br0">(</span><span class="nu0">0</span><span class="sy0">,</span><span class="nu0">0</span><span class="sy0">,</span>HDP<span class="sy0">+</span><span class="nu0">1</span><span class="sy0">,</span>VDP<span class="sy0">+</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">(</span>i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>i<span class="sy0">&lt;</span>HDP<span class="sy0">+</span><span class="nu0">1</span><span class="sy0">;</span>i<span class="sy0">++</span><span class="br0">)</span>
  <span class="br0">{</span>
    <span class="kw1">for</span> <span class="br0">(</span>j<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>j<span class="sy0">&lt;</span>VDP<span class="sy0">+</span><span class="nu0">1</span><span class="sy0">;</span>j<span class="sy0">++</span><span class="br0">)</span>
    <span class="br0">{</span>
      Lcd_Write_Data<span class="br0">(</span>VH<span class="sy0">,</span>VL<span class="br0">)</span><span class="sy0">;</span>
    <span class="br0">}</span>
  <span class="br0">}</span>
<span class="br0">}</span>
&nbsp;
unsigned char Makpix<span class="br0">(</span>struct pix_ pix1<span class="sy0">,</span>struct pix_ pix2<span class="br0">)</span> <span class="co1">//Filtering</span>
<span class="br0">{</span>
    unsigned char l<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span>
    int x<span class="sy0">=</span>pix1<span class="sy0">.</span>x<span class="sy0">&gt;</span>pix2<span class="sy0">.</span>x?pix1<span class="sy0">.</span>x<span class="sy0">-</span>pix2<span class="sy0">.</span>x<span class="sy0">:</span>pix2<span class="sy0">.</span>x<span class="sy0">-</span>pix1<span class="sy0">.</span>x<span class="sy0">;</span>
    int y<span class="sy0">=</span>pix1<span class="sy0">.</span>y<span class="sy0">&gt;</span>pix2<span class="sy0">.</span>y?pix1<span class="sy0">.</span>y<span class="sy0">-</span>pix2<span class="sy0">.</span>y<span class="sy0">:</span>pix2<span class="sy0">.</span>y<span class="sy0">-</span>pix1<span class="sy0">.</span>y<span class="sy0">;</span>
    <span class="kw1">if</span><span class="br0">(</span>x<span class="sy0">&lt;</span><span class="nu0">10</span><span class="sy0">&amp;&amp;</span>y<span class="sy0">&lt;</span><span class="nu0">10</span><span class="br0">)</span>	
    <span class="br0">{</span>
    	l<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">;</span>
    	Tp_pix<span class="sy0">.</span>x<span class="sy0">=</span>pix1<span class="sy0">.</span>x<span class="sy0">;</span>
    	Tp_pix<span class="sy0">.</span>y<span class="sy0">=</span>pix1<span class="sy0">.</span>y<span class="sy0">;</span>
    <span class="br0">}</span>
    <span class="kw1">return</span> l<span class="sy0">;</span>
<span class="br0">}</span>
&nbsp;
unsigned char Getpix<span class="br0">(</span><span class="br0">)</span> 
<span class="br0">{</span>
	struct pix_ pix1<span class="sy0">;</span>
	struct pix_ pix2<span class="sy0">;</span> 
	pix1<span class="sy0">=</span>AD7843<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
	pix2<span class="sy0">=</span>AD7843<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>
 	<span class="kw1">return</span>	Makpix<span class="br0">(</span>pix1<span class="sy0">,</span>pix2<span class="br0">)</span><span class="sy0">;</span>	
<span class="br0">}</span>
&nbsp;
void setup<span class="br0">(</span><span class="br0">)</span>
<span class="br0">{</span>
  <span class="kw1">for</span><span class="br0">(</span>int p<span class="sy0">=</span><span class="nu0">22</span><span class="sy0">;</span>p<span class="sy0">&lt;</span><span class="nu0">42</span><span class="sy0">;</span>p<span class="sy0">++</span><span class="br0">)</span>
  <span class="br0">{</span>
    pinMode<span class="br0">(</span>p<span class="sy0">,</span>OUTPUT<span class="br0">)</span><span class="sy0">;</span>
  <span class="br0">}</span>
  <span class="kw1">for</span><span class="br0">(</span>int p<span class="sy0">=</span><span class="nu0">2</span><span class="sy0">;</span> p<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span>p<span class="sy0">++</span><span class="br0">)</span>
      pinMode<span class="br0">(</span>p<span class="sy0">,</span>OUTPUT<span class="br0">)</span><span class="sy0">;</span>
  pinMode<span class="br0">(</span>DOUT<span class="sy0">,</span>INPUT<span class="br0">)</span><span class="sy0">;</span>
  pinMode<span class="br0">(</span>IRQ<span class="sy0">,</span>INPUT<span class="br0">)</span><span class="sy0">;</span>
&nbsp;
  Lcd_Init<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>     
  Pant<span class="br0">(</span><span class="nu12">0x00</span><span class="sy0">,</span> <span class="nu12">0x00</span><span class="br0">)</span><span class="sy0">;</span>  
  delay<span class="br0">(</span><span class="nu0">500</span><span class="br0">)</span><span class="sy0">;</span>
  spistar<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span>  
<span class="br0">}</span>
&nbsp;
void loop<span class="br0">(</span><span class="br0">)</span><span class="br0">{</span>
                unsigned int lx<span class="sy0">,</span>ly<span class="sy0">;</span>
                int pacy<span class="sy0">=</span>random<span class="br0">(</span><span class="nu0">0</span><span class="sy0">,</span> <span class="nu0">7</span><span class="br0">)</span><span class="sy0">;</span>
		<span class="kw1">while</span><span class="br0">(</span>digitalRead<span class="br0">(</span>IRQ<span class="br0">)</span><span class="sy0">==</span><span class="nu0">0</span><span class="br0">)</span>
		<span class="br0">{</span>
			<span class="kw1">if</span><span class="br0">(</span>Getpix<span class="br0">(</span><span class="br0">)</span><span class="sy0">==</span><span class="nu0">1</span><span class="br0">)</span>
			<span class="br0">{</span>
&nbsp;
                                lx<span class="sy0">=</span>HDP<span class="sy0">-</span><span class="br0">(</span><span class="br0">(</span>Tp_pix<span class="sy0">.</span>x<span class="sy0">-</span><span class="nu0">380</span><span class="br0">)</span><span class="sy0">*</span><span class="nu0">10</span><span class="sy0">/</span><span class="nu0">69</span><span class="br0">)</span><span class="sy0">;</span>
    				<span class="kw1">if</span><span class="br0">(</span>lx<span class="sy0">&gt;</span>HDP<span class="br0">)</span> lx<span class="sy0">=</span>HDP<span class="sy0">;</span>
    				ly<span class="sy0">=</span>VDP<span class="sy0">-</span><span class="br0">(</span><span class="br0">(</span>Tp_pix<span class="sy0">.</span>y<span class="sy0">-</span><span class="nu0">600</span><span class="br0">)</span><span class="sy0">*</span><span class="nu0">10</span><span class="sy0">/</span><span class="nu0">111</span><span class="br0">)</span><span class="sy0">;</span>
                                    <span class="kw1">if</span><span class="br0">(</span>ly<span class="sy0">&gt;</span>VDP<span class="br0">)</span> ly<span class="sy0">=</span>VDP<span class="sy0">;</span>
    				Address_set<span class="br0">(</span>lx<span class="sy0">,</span>ly<span class="sy0">,</span>lx<span class="sy0">+</span><span class="nu0">2</span><span class="sy0">,</span>ly<span class="sy0">+</span><span class="nu0">2</span><span class="br0">)</span><span class="sy0">;</span>
                                <span class="kw1">switch</span><span class="br0">(</span>pacy<span class="br0">)</span>
                                <span class="br0">{</span>
                                  <span class="kw1">case</span> <span class="nu0">0</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0xF8</span><span class="sy0">,</span><span class="nu12">0x00</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Red</span>
                                  <span class="kw1">case</span> <span class="nu0">1</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0xFF</span><span class="sy0">,</span><span class="nu12">0xE0</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Yellow</span>
                                  <span class="kw1">case</span> <span class="nu0">2</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0xFF</span><span class="sy0">,</span><span class="nu12">0xFF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//White </span>
                                  <span class="kw1">case</span> <span class="nu0">3</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0x05</span><span class="sy0">,</span><span class="nu12">0x1F</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Blue</span>
                                  <span class="kw1">case</span> <span class="nu0">4</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0x00</span><span class="sy0">,</span><span class="nu12">0x1F</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Blue-2</span>
                                  <span class="kw1">case</span> <span class="nu0">5</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0xF8</span><span class="sy0">,</span><span class="nu12">0x1F</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Magenta</span>
                                  <span class="kw1">case</span> <span class="nu0">6</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0x07</span><span class="sy0">,</span><span class="nu12">0xE0</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Green</span>
                                  <span class="kw1">case</span> <span class="nu0">7</span><span class="sy0">:</span> <span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0x7F</span><span class="sy0">,</span><span class="nu12">0xFF</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Cyan</span>
                                  defoult<span class="sy0">:</span><span class="kw1">for</span><span class="br0">(</span>int i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span><span class="nu0">7</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">)</span>  Lcd_Write_Data<span class="br0">(</span><span class="nu12">0x00</span><span class="sy0">,</span><span class="nu12">0x00</span><span class="br0">)</span><span class="sy0">;</span>  <span class="kw1">break</span><span class="sy0">;</span>   <span class="co1">//Black</span>
                                <span class="br0">}</span>
&nbsp;
		   	<span class="br0">}</span>
		<span class="br0">}</span>	
<span class="br0">}</span></pre></div></div>
</div>
<h3> <span class="mw-headline" id="Example"> Example  </span></h3>
<p>The projects and application examples.
</p>
<h2> <span class="mw-headline" id="Bill_of_Materials_.28BOM.29_.2Fparts_list"> Bill of Materials (BOM) /parts list  </span></h2>
<p>All the components used to produce the product. 
</p>
<h2> <span class="mw-headline" id="FAQ"> FAQ  </span></h2>
<p>Please list your question here:
</p>
<h2> <span class="mw-headline" id="Support"> Support  </span></h2>
<p>If you have questions or other better design ideas,
</p>
<h2> <span class="mw-headline" id="Version_Tracker"> Version Tracker  </span></h2>
<table class="wikitable">
<tbody><tr>
<th> Revision
</th><th> Descriptions
</th><th> Release
</th></tr>
<tr>
<td width="300px"> v1.0
</td><td width="500px"> Initial public release
</td><td width="200px"> date
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Bug_Tracker"> Bug Tracker  </span></h2>
<p>Bug Tracker is the place you can publish any bugs you think you might have found during use. Please write down what you have to say, your answers will help us improve our 
</p><p>products. 
</p>
<h2> <span class="mw-headline" id="Additional_Idea"> Additional Idea  </span></h2>
<p>The Additional Idea is the place to write your project ideas about this product, or other usages you've found. Or you can write them on Projects page. 
</p>
<h2> <span class="mw-headline" id="Resources"> Resources </span></h2>
<ul><li><a href="http://elecfreaks.com/store/download/datasheet/lcd/TFT/EF_TFT4_3_V2_4.zip" class="external text" rel="nofollow">DDownload NewTFT Library </a>
</li><li><a href="http://elecfreaks.com/store/download/datasheet/lcd/TFT/4.3inch.zip" class="external text" rel="nofollow">Download TFT01-4.3 Material </a>
</li><li><a href="http://elecfreaks.com/store/download/datasheet/lcd/TFT/RGB-Table.pdf" class="external text" rel="nofollow">Download RGB Table</a>
</li><li><a href="http://www.henningkarlsen.com/electronics/library.php?id=51" class="external text" rel="nofollow">Link to UTFT Library</a>
</li></ul>
<h2> <span class="mw-headline" id="How_to_buy"> How to buy  </span></h2>
<p>Click here to buy: <a href="http://www.elecfreaks.com/store/43-tft-lcd-screen-module-tft0143-p-419.html" class="external free" rel="nofollow">http://www.elecfreaks.com/store/43-tft-lcd-screen-module-tft0143-p-419.html</a>
</p>
<h2> <span class="mw-headline" id="See_Also"> See Also  </span></h2>
<p>Other related products and resources.
</p>
<h2> <span class="mw-headline" id="Licensing"> Licensing  </span></h2>
<p>This documentation is licensed under the Creative Commons <a href="http://creativecommons.org/licenses/by-sa/3.0/" class="external text" rel="nofollow">Attribution-ShareAlike License 3.0</a> Source code and libraries are 
</p><p>licensed under <a href="http://www.gnu.org/licenses/gpl.html" class="external text" rel="nofollow">GPL/LGPL</a>, see source code files for details.
</p>
<h2> <span class="mw-headline" id="External_Links"> External Links  </span></h2>
<p>Links to external webpages which provide more application ideas, documents/datasheet or software libraries
</p>
<!-- 
NewPP limit report
Preprocessor node count: 101/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key elecfrea_wiki-mdw_:pcache:idhash:570-0!1!0!!en!2!edit=0 and timestamp 20130716173413 -->
<div class="printfooter">
Retrieved from "<a href="./ElecFreaks - Wiki_files/ElecFreaks - Wiki.htm">http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module</a>"</div>
				<!-- /bodytext -->
								<!-- catlinks -->
				<div id="catlinks" class="catlinks"><div id="mw-normal-catlinks"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:Categories" title="Special:Categories">Categories</a>: <span dir="ltr"><a href="http://www.elecfreaks.com/wiki/index.php?title=Category:TFT01-4.3&action=edit&redlink=1" class="new" title="Category:TFT01-4.3 (page does not exist)">TFT01-4.3</a></span> | <span dir="ltr"><a href="http://www.elecfreaks.com/wiki/index.php?title=Category:LCD&action=edit&redlink=1" class="new" title="Category:LCD (page does not exist)">LCD</a></span> | <span dir="ltr"><a href="http://www.elecfreaks.com/wiki/index.php?title=Category:All_Products&action=edit&redlink=1" class="new" title="Category:All Products (page does not exist)">All Products</a></span></div></div>				<!-- /catlinks -->
												<div class="visualClear"></div>
			</div>
			<!-- /bodyContent -->
		</div>
		<!-- /content -->
		<!-- header -->
		<div id="mw-head" class="noprint">
			
<!-- 0 -->
<div id="p-personal" class="">
	<h5>Personal tools</h5>
	<ul>
					<li id="pt-login"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:UserLogin&returnto=4.3%22_Width_480*272_TFT_LCD_Module" title="You are encouraged to log in; however, it is not mandatory [alt-o]" accesskey="o">Log in</a></li>
			</ul>
</div>

<!-- /0 -->
			<div id="left-navigation">
				
<!-- 0 -->
<div id="p-namespaces" class="vectorTabs">
	<h5>Namespaces</h5>
	<ul>
					<li id="ca-nstab-main" class="selected"><a href="./ElecFreaks - Wiki_files/ElecFreaks - Wiki.htm" title="View the content page [alt-c]" accesskey="c"><span>Page</span></a></li>
					<li id="ca-talk" class="new"><a href="http://www.elecfreaks.com/wiki/index.php?title=Talk:4.3%22_Width_480*272_TFT_LCD_Module&action=edit&redlink=1" title="Discussion about the content page [alt-t]" accesskey="t"><span>Discussion</span></a></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-variants" class="vectorMenu emptyPortlet">
	<h5><span>Variants</span><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->
			</div>
			<div id="right-navigation">
				
<!-- 0 -->
<div id="p-views" class="vectorTabs">
	<h5>Views</h5>
	<ul>
					<li id="ca-view" class="selected"><a href="./ElecFreaks - Wiki_files/ElecFreaks - Wiki.htm"><span>Read</span></a></li>
					<li id="ca-viewsource"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module&action=edit" title="This page is protected.
You can view its source [alt-e]" accesskey="e"><span>View source</span></a></li>
					<li id="ca-history" class="collapsible "><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module&action=history" title="Past revisions of this page [alt-h]" accesskey="h"><span>View history</span></a></li>
			</ul>
</div>

<!-- /0 -->

<!-- 1 -->
<div id="p-cactions" class="vectorMenu emptyPortlet">
	<h5><span>Actions</span><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module#"></a></h5>
	<div class="menu">
		<ul>
					</ul>
	</div>
</div>

<!-- /1 -->

<!-- 2 -->
<div id="p-search">
	<h5><label for="searchInput">Search</label></h5>
	<form action="http://www.elecfreaks.com/wiki/index.php" id="searchform">
		<input type="hidden" name="title" value="Special:Search">
				<input id="searchInput" name="search" type="text" title="Search Wiki [alt-f]" accesskey="f" value="">
		<input type="submit" name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if exists">
		<input type="submit" name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text">
			</form>
</div>

<!-- /2 -->
			</div>
		</div>
		<!-- /header -->
		<!-- panel -->
			<div id="mw-panel" class="noprint">
				<!-- logo -->
					<div id="p-logo"><a style="background-image: url(/wiki/skins/common/images/wiki.png);" href="http://www.elecfreaks.com/wiki/index.php?title=Main_Page" title="Visit the main page"></a></div>
				<!-- /logo -->
				
<!-- navigation -->
<div class="portal" id="p-navigation">
	<h5>Navigation</h5>
	<div class="body">
				<ul>
					<li id="n-mainpage-description"><a href="http://www.elecfreaks.com/wiki/index.php?title=Main_Page" title="Visit the main page [alt-z]" accesskey="z">Main page</a></li>
					<li id="n-Product"><a href="http://www.elecfreaks.com/wiki/index.php?title=Catalog_category">Product</a></li>
					<li id="n-Tutorial"><a href="http://www.elecfreaks.com/wiki/index.php?title=Tutorial">Tutorial</a></li>
					<li id="n-randompage"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:Random" title="Load a random page [alt-x]" accesskey="x">Random page</a></li>
				</ul>
			</div>
</div>

<!-- /navigation -->

<!-- Support -->
<div class="portal" id="p-Support">
	<h5>Support</h5>
	<div class="body">
				<ul>
					<li id="n-recentchanges"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:RecentChanges" title="The list of recent changes in the wiki [alt-r]" accesskey="r">Recent changes</a></li>
					<li id="n-help"><a href="http://www.elecfreaks.com/wiki/index.php?title=Help:Contents" title="The place to find out">Help</a></li>
					<li id="n-FAQ"><a href="http://www.elecfreaks.com/wiki/index.php?title=FAQ">FAQ</a></li>
					<li id="n-Help:Formatting"><a href="http://www.elecfreaks.com/wiki/index.php?title=Formatting">Help:Formatting</a></li>
					<li id="n-Help:Tables"><a href="http://www.elecfreaks.com/wiki/index.php?title=Help:Tables">Help:Tables</a></li>
					<li id="n-Help:Links"><a href="http://www.elecfreaks.com/wiki/index.php?title=Help:Links">Help:Links</a></li>
					<li id="n-Help:Image"><a href="http://www.elecfreaks.com/wiki/index.php?title=Help:Image">Help:Image</a></li>
				</ul>
			</div>
</div>

<!-- /Support -->

<!-- SEARCH -->

<!-- /SEARCH -->

<!-- TOOLBOX -->
<div class="portal" id="p-tb">
	<h5>Toolbox</h5>
	<div class="body">
		<ul>
					<li id="t-whatlinkshere"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:WhatLinksHere/4.3%22_Width_480*272_TFT_LCD_Module" title="List of all wiki pages that link here [alt-j]" accesskey="j">What links here</a></li>
						<li id="t-recentchangeslinked"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:RecentChangesLinked/4.3%22_Width_480*272_TFT_LCD_Module" title="Recent changes in pages linked from this page [alt-k]" accesskey="k">Related changes</a></li>
																																										<li id="t-specialpages"><a href="http://www.elecfreaks.com/wiki/index.php?title=Special:SpecialPages" title="List of all special pages [alt-q]" accesskey="q">Special pages</a></li>
									<li id="t-print"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module&printable=yes" rel="alternate" title="Printable version of this page [alt-p]" accesskey="p">Printable version</a></li>
						<li id="t-permalink"><a href="http://www.elecfreaks.com/wiki/index.php?title=4.3%22_Width_480*272_TFT_LCD_Module&oldid=2554" title="Permanent link to this revision of the page">Permanent link</a></li>
						</ul>
	</div>
</div>

<!-- /TOOLBOX -->

<!-- LANGUAGES -->

<!-- /LANGUAGES -->
			</div>
		<!-- /panel -->
		<!-- footer -->
		<div id="footer">
											<ul id="footer-info">
																	<li id="footer-info-lastmod"> This page was last modified on 11 June 2012, at 04:33.</li>
																							<li id="footer-info-viewcount">This page has been accessed 3,037 times.</li>
															</ul>
															<ul id="footer-places">
																	<li id="footer-places-about"><a href="http://www.elecfreaks.com/wiki/index.php?title=Wiki:About" title="Wiki:About">About Wiki</a></li>
																							<li id="footer-places-disclaimer"><a href="http://www.elecfreaks.com/wiki/index.php?title=Wiki:General_disclaimer" title="Wiki:General disclaimer">Disclaimers</a></li>
															</ul>
										<ul id="footer-icons" class="noprint">
								<li id="footer-icon-poweredby"><a href="http://www.mediawiki.org/"><img src="./ElecFreaks - Wiki_files/poweredby_mediawiki_88x31.png" height="31" width="88" alt="Powered by MediaWiki"></a></li>
											</ul>
			<div style="clear:both"></div>
		</div>
		<!-- /footer -->
		<!-- fixalpha -->
		<script type="text/javascript"> if ( window.isMSIE55 ) fixalpha(); </script>
		<!-- /fixalpha -->
		
<script>if (window.runOnloadHook) runOnloadHook();</script>
		<!-- Served in 0.228 secs. -->			

</body></html>